/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.11 album_cover.glb
Author: nightfuzzball01-RealMusic (https://sketchfab.com/nightfuzzball01)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/nf-mansion-album-cover-1710f5130c24474aaf55608975da8113
Title: NF Mansion Album cover
*/

import React, { useEffect, useRef, useState } from 'react'
import { useGLTF } from '@react-three/drei'
import { a } from "@react-spring/three";
import { useSpring } from "@react-spring/core";
export function Album(props) {
  useEffect(()=>{
    setAPosition(0)
    setBPosition(0)
    setCPosition(0)
    setDPosition(0)
  },[])
  let [aPosition,setAPosition] = useState(1);
  let [bPosition,setBPosition] = useState(1);
  let [cPosition,setCPosition] = useState(1);
  let [dPosition,setDPosition] = useState(1);
  const { nodes, materials } = useGLTF('static/album_cover.glb')
  const hello = () =>{
    console.log("hello world")
  }
   const changeAPosition = () =>{
    setAPosition(Number(!aPosition))
  }

  const changeBPosition = () =>{
  setBPosition(Number(!bPosition))
  }

  const changeCPosition = () =>{
  setCPosition(Number(!cPosition))
  }
  
  const changeDPosition = () =>{
  setDPosition(Number(!dPosition))
  }
    const  springA  = useSpring({
    z: aPosition? [0,10,-15 ]:[ 0,5,-15 ],
    config:{ mass: .85, tension: 190, friction: 15 }
  })
  const  springB  = useSpring({
    z: bPosition? [0,10,15 ]:[ 0,5,15 ],
    config:{ mass: .85, tension: 190, friction: 15 }
  })
    const  springC  = useSpring({
    z: cPosition? [-15,10,0 ]:[-15,5,0],
    config:{ mass: .85, tension: 190, friction: 15}
  })
    const  springD  = useSpring({
    z: dPosition? [15,10,0 ]:[15,5,0],
    config:{ mass: .85, tension: 190, friction: 15 }
  })
  return (
    <>
    <group  {...props} dispose={null} >
      <a.group  onClick={changeAPosition} rotation={[Math.PI /1.5,Math.PI , 0]} position={springA.z} scale={.03}>
        <mesh geometry={nodes.Object_2.geometry} material={materials.color_14541540} />
        <mesh geometry={nodes.Object_3.geometry} material={materials.color_2829873} />
      </a.group>
    </group>
    <group {...props} dispose={null} >
      <a.group  onClick={changeBPosition} rotation={[-Math.PI /1.5, 0, 0]} position={springB.z} scale={.03}>
        <mesh geometry={nodes.Object_2.geometry} material={materials.color_14541540} />
        <mesh geometry={nodes.Object_3.geometry} material={materials.color_2829873} />
      </a.group>
    </group>
    <group {...props} dispose={null} >
      <a.group  onClick={changeCPosition} rotation={[-Math.PI /2, Math.PI /5 , -Math.PI /2]} position={springC.z} scale={.03}>
        <mesh geometry={nodes.Object_2.geometry} material={materials.color_14541540} />
        <mesh geometry={nodes.Object_3.geometry} material={materials.color_2829873} />
      </a.group>
    </group>
    <group {...props} dispose={null} >
      <a.group onClick={changeDPosition} rotation={[-Math.PI /2, -Math.PI /5 , Math.PI /2]} position={springD.z} scale={.03}>
        <mesh geometry={nodes.Object_2.geometry} material={materials.color_14541540} />
        <mesh geometry={nodes.Object_3.geometry} material={materials.color_2829873} />
      </a.group>
    </group>
    </>
  )
}

useGLTF.preload('static/album_cover.glb')
