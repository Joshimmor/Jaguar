/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.11 album_cover.glb
Author: nightfuzzball01-RealMusic (https://sketchfab.com/nightfuzzball01)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/nf-mansion-album-cover-1710f5130c24474aaf55608975da8113
Title: NF Mansion Album cover
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { a } from "@react-spring/three";
export function Album(props) {
  const { nodes, materials } = useGLTF('static/album_cover.glb')
  const hello = () =>{
    console.log("hello world")
  }
  return (
    <>
    <group  {...props} dispose={null} >
      <a.group onClick={hello} rotation={[Math.PI /1.5,Math.PI , 0]} position={[0,5,-15]} scale={.03}>
        <mesh geometry={nodes.Object_2.geometry} material={materials.color_14541540} />
        <mesh geometry={nodes.Object_3.geometry} material={materials.color_2829873} />
      </a.group>
    </group>
    <group {...props} dispose={null} >
      <group rotation={[-Math.PI /1.5, 0, 0]} position={[0,5,15]} scale={.03}>
        <mesh geometry={nodes.Object_2.geometry} material={materials.color_14541540} />
        <mesh geometry={nodes.Object_3.geometry} material={materials.color_2829873} />
      </group>
    </group>
    <group {...props} dispose={null} >
      <group rotation={[-Math.PI /2, Math.PI /5 , -Math.PI /2]} position={[-15,5,0]} scale={.03}>
        <mesh geometry={nodes.Object_2.geometry} material={materials.color_14541540} />
        <mesh geometry={nodes.Object_3.geometry} material={materials.color_2829873} />
      </group>
    </group>
    <group {...props} dispose={null} >
      <group rotation={[-Math.PI /2, -Math.PI /5 , Math.PI /2]} position={[15,5,0]} scale={.03}>
        <mesh geometry={nodes.Object_2.geometry} material={materials.color_14541540} />
        <mesh geometry={nodes.Object_3.geometry} material={materials.color_2829873} />
      </group>
    </group>
    </>
  )
}

useGLTF.preload('/album_cover.glb')
